# ------------------------------------------------------------------------------
#  Numenta Platform for Intelligent Computing (NuPIC)
#  Copyright (C) 2019, Numenta, Inc.  Unless you have an agreement
#  with Numenta, Inc., for a separate license for this software code, the
#  following terms and conditions apply:
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero Public License version 3 as
#  published by the Free Software Foundation.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#  See the GNU Affero Public License for more details.
#
#  You should have received a copy of the GNU Affero Public License
#  along with this program.  If not, see http://www.gnu.org/licenses.
#
#  http://numenta.org/licenses/
#
# ------------------------------------------------------------------------------
[metadata]
name = nupic.research
version = 0.0.1.dev0
url = https://github.com/numenta/nupic.research
project_urls =
    Documentation = https://nupicresearch.readthedocs.io
    Source = https://github.com/numenta/nupic.research
    Bug Tracker = https://github.com/numenta/nupic.research/issues
author = Numenta
author-email = nupic.research@numenta.com
classifiers =
    Programming Language :: Python :: 3
    License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)
    Operating System :: OS Independent
    Environment :: Console
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering :: Artificial Intelligence
license  = AGPLv3
license_files = LICENSE
description = Numenta Experimental Research Code
long_description = file: README.md
long_description_content_type = text/markdown
platforms = any

[options]
python_requires = >=3.7, <4
packages = find_namespace:

# Global dependencies available to all projects and frameworks
install_requires =
    numpy
    pandas
    matplotlib
    jupyter
    tqdm
    tabulate
    nupic.torch
    torchvision
    h5py
    filelock
    boto3
    
    # vernon
    ray[tune]~=0.8.3
    seaborn
    wandb
    sigopt

[options.extras_require]
# Project specific dependencies
#
imagenet =
    pretrainedmodels==0.7.4

gsc =
    librosa==0.7.1
    # FIXME: remove numba once dependency issues with numpy 1.21.2 is fixed on a new numba release
    #        Caused by this PR https://github.com/numba/numba/pull/7209
    numba==0.53.0

dendrites =
    ptitprince==0.2.5
    seaborn==0.11.1
    sklearn
    nupic.research

transformers =
    ray[tune]==1.4.0
    datasets>=1.6.1,<1.7.0
    cloudpickle>=1.6.0
    wandb>=0.10.27,<0.11.0 # this can be updated in a future version of transformers, for now 0.11.1, seems to not log properly with the transformers repo
    pickle5>=0.0.11
    transformers==4.8.1  # 4.8.1 required to use Ray Tune
    deepspeed==0.4.5

# Testing, Code Style, etc...
# 
dev =
    awscli
    pytest==6.2.5
    pytest-xdist==2.4.0

    # Python coding style formatter
    black==21.7b0

    # Format docstrings
    docformatter==1.4

    # Format imports
    isort==4.3.21

    # Python Linting tools
    flake8==3.9.2

    # Check Python coding style
    flake8-black==0.2.3

    # Check forgotten breakpoints
    flake8-breakpoint==1.1.0

    # Find likely bugs and design problems
    flake8-bugbear==21.9.1

    # Check for python builtins being used as variables or parameters
    flake8-builtins==1.5.3

    # Help you write better list/set/dict comprehensions
    flake8-comprehensions==3.6.1

    # Checks for copyright notices in all python files
    flake8-copyright==0.2.2

    # Check docstrings using pydocstyle conforming to PEP 257
    # FIXME: See  https://gitlab.com/pycqa/flake8-docstrings/issues/36
    # flake8-docstrings

    # Check for FIXME, TODO and other temporary developer notes
    flake8-fixme==1.1.1

    # Check for sorted imports
    flake8-isort==4.0.0

    # Check for mutable default arguments
    flake8-mutable==1.2.0

    # Check for Print statements in python files
    flake8-print==4.0.0

    # Check the PEP-8 naming conventions
    pep8-naming==0.8.2

    # Check string quotes
    flake8-quotes==3.3.0


[options.packages.find]
include = nupic.research.*

[bdist_wheel]
universal=0

[aliases]
test=pytest

[tool:pytest]
testpaths=tests
filterwarnings =
    ignore:.*:DeprecationWarning

[flake8]
; Select all
select = A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z

max-complexity = 18
max-line-length = 88
exclude = .git, .eggs, __pycache__, build, dist, __init__.py, .domino, .ipynb, .ipynb_checkpoints
; D1XX: Missing Docstrings
; D200: One-line docstring should fit on one line with quotes
; D205: 1 blank line required between summary line and description
; D4XX: Docstring Content Issues
; N812: lowercase imported as non lowercase. Allow "import torch.nn.functional as F"
; T001: print found
; E203: whitespace before ':'
; W503: line break before binary operator
; E800: Found commented out code
; T100: fixme found (FIXME)
; T101: fixme found (TODO)
; T003: pprint found
; C4XX: ignore all Flake8 comprehensions
; BLK100: ignore Black would make changes
; F541: f-string is missing placeholders
ignore = D1, D200, D205, D4, N812, T001, E203, W503, E800, T100, T101, T003, C4, BLK100, F541
copyright-check = True
copyright-author = Numenta
copyright-regexp = Copyright\s+\(C\)\s+\d{4},?\s+Numenta
inline-quotes = double

[build_sphinx]
source-dir = docs/source
build-dir = docs/build
